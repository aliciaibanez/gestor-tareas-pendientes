#BlueJ class context
comment0.target=GestorTareas
comment1.params=
comment1.target=GestorTareas()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ GestorTareas\r\n
comment2.params=textoTarea
comment2.target=void\ agregarTarea(java.lang.String)
comment2.text=\r\n\ Metodo\ 'agregarTarea'\ que\ agrega\ una\ tarea\ al\ final\ de\ la\ lista.\r\n\ Requiere\ un\ parametro\ de\ tipo\ String\ con\ el\ contenido\ de\ la\ tarea.\r\n
comment3.params=
comment3.target=java.lang.String\ devolverTareas()
comment3.text=\r\n\ M\u00E9todo\ 'devolverTareas'\ que\ devuelve\ un\ String\ con\ todas\ las\ tareas,\ una\r\n\ en\ cada\ l\u00EDnea.\ Si\ no\ hay\ tareas,\ esa\ l\u00EDnea\ contiene\ la\ cadena\r\n\ vac\u00EDa.\ No\ requiere\ parametros.\r\n
comment4.params=
comment4.target=int\ getNumeroTareas()
comment4.text=\r\n\ Metodo\ 'getNumeroTareas'\ que\ devuelve\ el\ numero\ de\ tareas\ pendientes\r\n\ existentes.\ No\ requiere\ par\u00E1metros.\r\n
comment5.params=
comment5.target=int\ getNumeroTareas2()
comment5.text=\r\n\ Metodo\ 'getNumeroTareas2'\ que\ devuelve\ el\ numero\ de\ tareas\ pendientes\r\n\ actuales\ y\ no\ requiere\ par\u00E1metros.\ No\ se\ puede\ usar\ el\ metodo\ size\ de\ la\r\n\ clase\ ArrayList.\r\n
comment6.params=
comment6.target=java.lang.String\ getTareaMasAntigua()
comment6.text=\r\n\ Metodo\ 'getTareaMasAntigua'\ que\ devuelve\ la\ primera\ tarea\ que\ se\ agrego\ \r\n\ al\ gestor\ de\ tareas;\ si\ no\ tareas\ devuelve\ la\ cadena\ vacia.\ No\ requiere\r\n\ parametros.\r\n
numComments=7
